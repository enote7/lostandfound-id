# Generated by Django 5.0.2 on 2024-02-28 22:21

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='FoundID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hall', models.CharField(max_length=100)),
                ('program', models.CharField(max_length=100)),
                ('reg_no', models.CharField(max_length=100)),
                ('id_no', models.CharField(max_length=100)),
                ('names', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('staff', 'Staff ID'), ('student', 'Student ID')], max_length=20)),
                ('description', models.TextField()),
                ('phone', models.CharField(max_length=20)),
                ('city_state', models.CharField(max_length=100)),
                ('street_locality', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('id_picture', models.ImageField(blank=True, null=True, upload_to='found_id_pictures/')),
                ('found_date', models.DateField(auto_now_add=True)),
                ('found_by', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='LostID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hall', models.CharField(max_length=100)),
                ('program', models.CharField(max_length=100)),
                ('reg_no', models.CharField(max_length=100)),
                ('id_no', models.CharField(max_length=100)),
                ('names', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('staff', 'Staff ID'), ('student', 'Student ID')], max_length=20)),
                ('description', models.TextField()),
                ('phone', models.CharField(max_length=20)),
                ('city_state', models.CharField(max_length=100)),
                ('street_locality', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('id_picture', models.ImageField(blank=True, null=True, upload_to='lost_id_pictures/')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/', verbose_name='profile picture')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('email_confirmed', models.BooleanField(default=False, verbose_name='email confirmed')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='FoundanddraftedID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hall', models.CharField(max_length=100)),
                ('program', models.CharField(max_length=100)),
                ('reg_no', models.CharField(max_length=100)),
                ('id_no', models.CharField(max_length=100)),
                ('names', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('staff', 'Staff ID'), ('student', 'Student ID')], max_length=20)),
                ('description', models.TextField()),
                ('phone', models.CharField(max_length=20)),
                ('city_state', models.CharField(max_length=100)),
                ('street_locality', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('id_picture', models.ImageField(blank=True, null=True, upload_to='found_id_pictures/')),
                ('found_date', models.DateField(auto_now_add=True)),
                ('found_by', models.CharField(max_length=255)),
                ('lost_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='idlossmgt.lostid')),
            ],
        ),
    ]
